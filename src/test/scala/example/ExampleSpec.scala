package example

import munit.FunSuite

class ExampleSpec extends FunSuite {

  val mainFunction = new Main()

  test("challenge test easy 1") {
    assertEquals(mainFunction.challengeFunction(0, 0), "")
  }

  test("challenge test easy 2") {
    assertEquals(mainFunction.challengeFunction(2, 0), "")
  }

  test("challenge test easy 3") {
    assertEquals(mainFunction.challengeFunction(1, 3), "")
  }

  test("challenge test easy 4") {
    assertEquals(mainFunction.challengeFunction(2, 3), """╔════╕
        |║▓▓▓▓│
        |╚════╛""".stripMargin)
  }

  test("challenge test easy 5") {
    assertEquals(mainFunction.challengeFunction(3, 2), """╔════╗
        |║▓▓▓▓║
        |╙────╜""".stripMargin)
  }

  test("challenge test easy 6") {
    assertEquals(mainFunction.challengeFunction(7, 7), """╔════╦════╗
        |║████║████║
        |╠════╬════╣
        |║████║████║
        |╚════╩════╝""".stripMargin)
  }

  test("challenge test easy 7") {
    assertEquals(mainFunction.challengeFunction(10, 2), """╔════╤════╦════╕
        |║▒▒▒▒│▒▒▒▒║▒▒▒▒│
        |╙────┴────╨────┘""".stripMargin)
  }

  test("challenge test easy 8") {
    assertEquals(
      mainFunction.challengeFunction(12, 12),
      """╔════╦════╤════╕
        |║████║▓▓▓▓│▒▒▒▒│
        |╠════╬════╪════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│
        |╟────╫────┼────┤
        |║▒▒▒▒║░░░░│    │
        |╙────╨────┴────┘""".stripMargin,
    )
  }

  test("challenge test 1") {
    assertEquals(
      mainFunction.challengeFunction(178, 77),
      // 1    0    1    1    0    0    1    0
      // 10110010 = 178
      """╔════╤════╦════╦════╤════╤════╦════╕
        |║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│
        |╟────┼────╫────╫────┼────┼────╫────┤
        |║░░░░│░░░░║▒▒▒▒║░░░░│    │░░░░║░░░░│
        |╟────┼────╫────╫────┼────┼────╫────┤
        |║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│
        |╠════╪════╬════╬════╪════╪════╬════╡
        |║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║▓▓▓▓│
        |╠════╪════╬════╬════╪════╪════╬════╡
        |║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│
        |╟────┼────╫────╫────┼────┼────╫────┤
        |║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│
        |╚════╧════╩════╩════╧════╧════╩════╛""".stripMargin,
    )
  }

  test("challenge test 2") {
    assertEquals(
      mainFunction.challengeFunction(843158, 19753245),
      """╔════╦════╤════╤════╦════╦════╤════╦════╦════╦════╤════╦════╦════╤════╤════╦════╤════╦════╦════╕
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▒▒▒▒║░░░░│    │░░░░║▒▒▒▒║░░░░│░░░░║▒▒▒▒║▒▒▒▒║░░░░│░░░░║▒▒▒▒║░░░░│    │░░░░║░░░░│░░░░║▒▒▒▒║░░░░│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║████║▓▓▓▓│▓▓▓▓║████║████║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║████║▓▓▓▓│▓▓▓▓║████║████║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▒▒▒▒║░░░░│    │░░░░║▒▒▒▒║░░░░│░░░░║▒▒▒▒║▒▒▒▒║░░░░│░░░░║▒▒▒▒║░░░░│    │░░░░║░░░░│░░░░║▒▒▒▒║░░░░│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▒▒▒▒║░░░░│    │░░░░║▒▒▒▒║░░░░│░░░░║▒▒▒▒║▒▒▒▒║░░░░│░░░░║▒▒▒▒║░░░░│    │░░░░║░░░░│░░░░║▒▒▒▒║░░░░│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▒▒▒▒║░░░░│    │░░░░║▒▒▒▒║░░░░│░░░░║▒▒▒▒║▒▒▒▒║░░░░│░░░░║▒▒▒▒║░░░░│    │░░░░║░░░░│░░░░║▒▒▒▒║░░░░│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║████║▓▓▓▓│▓▓▓▓║████║████║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║████║▓▓▓▓│▓▓▓▓║████║████║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│▒▒▒▒│▓▓▓▓║▓▓▓▓│▓▓▓▓║████║▓▓▓▓│
        |╠════╬════╪════╪════╬════╬════╪════╬════╬════╬════╪════╬════╬════╪════╪════╬════╪════╬════╬════╡
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╟────╫────┼────┼────╫────╫────┼────╫────╫────╫────┼────╫────╫────┼────┼────╫────┼────╫────╫────┤
        |║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▓▓▓▓║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│░░░░│▒▒▒▒║▒▒▒▒│▒▒▒▒║▓▓▓▓║▒▒▒▒│
        |╚════╩════╧════╧════╩════╩════╧════╩════╩════╩════╧════╩════╩════╧════╧════╩════╧════╩════╩════╛""".stripMargin,
    )
  }

  test("challenge test performance 100 iterations") {
    (0 to 100).map { _ =>
      mainFunction.challengeFunction(Int.MaxValue, Int.MaxValue)
      0
    }
  }

  test("challenge test performance 1k iterations") {
    (0 to 1000).map { _ =>
      mainFunction.challengeFunction(Int.MaxValue, Int.MaxValue)
      0
    }
  }

  test("challenge test performance 10k iterations") {
    (0 to 10000).map { _ =>
      mainFunction.challengeFunction(Int.MaxValue, Int.MaxValue)
      0
    }
  }

  test("challenge test performance 100k iterations") {
    (0 to 100000).map { _ =>
      mainFunction.challengeFunction(Int.MaxValue, Int.MaxValue)
      0
    }
  }

  test("challenge test performance 10k iterations - mixed") {
    (0 to 10000).map { _ =>
      mainFunction.challengeFunction(1431655765, 1227135853)
      0
    }
  }

  test("challenge test performance 100k iterations - mixed") {
    (0 to 100000).map { _ =>
      mainFunction.challengeFunction(1431655765, 1227135853)
      0
    }
  }
}
